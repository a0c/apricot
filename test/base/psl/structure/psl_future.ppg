-- !@!@!@!@ PRECEDENCE MUST BE FOLLOWED IN "OPERATORS" BLOCK OF THIS FILE !@!@!@!@
--
-- It will make the Parser considerably simplier, more flexible and more agile, if
-- the matching and splitting regexes of the operators would be specified in this
-- file as well! Consider, for example, Operator "next_event (BOP) [k] (TOP)"


operators
{
	always TOP;
	never BOP;
	BOP1 <-> BOP2;
	BOP -> TOP;
	TOP until BOP;
	BOP1 before BOP2;
	next TOP;
	next[k] TOP;
	next_e[j to k] BOP;
	next_a[j to k] TOP;
	next_event (BOP) [k] (TOP);
	BOP or TOP;
	TOP1 and TOP2;
	not BOP;
}

always TOP {
	STAT# 4 Nods, 5 Vars, 1 Grps, 1 Inps, 1 Outs, 3 Cons

	VAR#	0:	(i____)	"TOP"	<1:0>
	;terminal node constants
	VAR#	1:	(c____)	"FAIL"	<1:0>	VAL = 0
	VAR#	2:	(c____)	"PASS"	<1:0>	VAL = 1
	VAR#	3:	(c____)	"CHECKING"	<1:0>	VAL = 2
	;property PPG
	VAR#	4:	(o____)	"PROPERTY" <1:0>
	GRP#	0:	BEG = 0, LEN = 4 -----
		0	0:	(n___) (0=>1 1=>2 2=>3)	V = 0 "TOP"	<1:0> @[0 to END]_a
		1	1:	(____) (	0	0)	V = 1 "FAIL"	<1:0>
		2	2:	(____) (	0	0)	V = 2 "PASS"	<1:0>
		3	3:	(____) (	0	0)	V = 3 "CHECKING"	<1:0>
}

never BOP {
	STAT# 4 Nods, 5 Vars, 1 Grps, 1 Inps, 1 Outs, 3 Cons

	VAR#	0:	(i____)	"BOP"	<1:0>
	;terminal node constants
	VAR#	1:	(c____)	"FAIL"	<1:0>	VAL = 0
	VAR#	2:	(c____)	"PASS"	<1:0>	VAL = 1
	VAR#	3:	(c____)	"CHECKING"	<1:0>	VAL = 2
	;property PPG
	VAR#	4:	(o____)	"PROPERTY" <1:0>
	GRP#	0:	BEG = 0, LEN = 4 -----
		0	0:	(n___) (0=>2 1=>1 2=>3)	V = 0 "BOP"	<1:0> @[0 to END]_a
		1	1:	(____) (	0	0)	V = 1 "FAIL"	<1:0>
		2	2:	(____) (	0	0)	V = 2 "PASS"	<1:0>
		3	3:	(____) (	0	0)	V = 3 "CHECKING"	<1:0>
}

-- NEW!	1 ########################
BOP1 <-> BOP2 {
	STAT# 6 Nods, 6 Vars, 1 Grps, 2 Inps, 1 Outs, 3 Cons

	VAR#	0:	(i____)	"BOP1"	<1:0>
	VAR#	1:	(i____)	"BOP2"	<1:0>
	;terminal node constants
	VAR#	2:	(c____)	"FAIL"	<1:0>	VAL = 0
	VAR#	3:	(c____)	"PASS"	<1:0>	VAL = 1
	VAR#	4:	(c____)	"CHECKING"	<1:0>	VAL = 2
	;property PPG
	VAR#	5:	(o____)	"PROPERTY" <1:0>
	GRP#	0:	BEG = 0, LEN = 6 -----
		0	0:	(n___) (0=>1 1=>2 2=>5)	V = 0 "BOP1"	<1:0>
		1	1:	(n___) (0=>4 1=>3 2=>5)	V = 1 "BOP2"	<1:0>
		2	2:	(n___) (0=>3 1=>4 2=>5)	V = 1 "BOP2"	<1:0>
		3	3:	(____) (	0	0)	V = 2 "FAIL"	<1:0>
		4	4:	(____) (	0	0)	V = 3 "PASS"	<1:0>
		5	5:	(____) (	0	0)	V = 4 "CHECKING"	<1:0>
}

BOP -> TOP {
	STAT# 5 Nods, 6 Vars, 1 Grps, 2 Inps, 1 Outs, 3 Cons

	VAR#	0:	(i____)	"BOP"	<1:0>
	VAR#	1:	(i____)	"TOP"	<1:0>
	;terminal node constants
	VAR#	2:	(c____)	"FAIL"	<1:0>	VAL = 0
	VAR#	3:	(c____)	"PASS"	<1:0>	VAL = 1
	VAR#	4:	(c____)	"CHECKING"	<1:0>	VAL = 2
	;property PPG
	VAR#	5:	(o____)	"PROPERTY" <1:0>
	GRP#	0:	BEG = 0, LEN = 5 -----
		0	0:	(n___) (0=>4 1=>1 2=>4)	V = 0 "BOP"	<1:0>
		1	1:	(n___) (0=>2 1=>3 2=>4)	V = 1 "TOP"	<1:0>
		2	2:	(____) (	0	0)	V = 2 "FAIL"	<1:0>
		3	3:	(____) (	0	0)	V = 3 "PASS"	<1:0>
		4	4:	(____) (	0	0)	V = 4 "CHECKING"	<1:0>
}

-- NEW! 2 ########################
TOP until BOP {
	STAT# 4 Nods, 6 Vars, 1 Grps, 2 Inps, 1 Outs, 3 Cons

	VAR#	0:	(i____)	"TOP"	<1:0>
	VAR#	1:	(i____)	"BOP"	<1:0>
	;terminal node constants
	VAR#	2:	(c____)	"FAIL"	<1:0>	VAL = 0
	VAR#	3:	(c____)	"PASS"	<1:0>	VAL = 1
	VAR#	4:	(c____)	"CHECKING"	<1:0>	VAL = 2
	;property PPG
	VAR#	5:	(o____)	"PROPERTY" <1:0>
	GRP#	0:	BEG = 0, LEN = 4 -----
		0	0:	(n___) (0=>1 1=>2 2=>3)	V = 0 "TOP"	<1:0> @[0 to event BOP - 1]_a
		1	1:	(____) (	0	0)	V = 2 "FAIL"	<1:0>
		2	2:	(____) (	0	0)	V = 3 "PASS"	<1:0>
		3	3:	(____) (	0	0)	V = 4 "CHECKING"	<1:0>
}

--BOP1 until BOP2 {
--	STAT# 4 Nods, 6 Vars, 1 Grps, 2 Inps, 1 Outs, 3 Cons
--
--	VAR#	0:	(i____)	"BOP1"	<1:0>
--	VAR#	1:	(i____)	"BOP2"	<1:0>
--	;terminal node constants
--	VAR#	2:	(c____)	"FAIL"	<1:0>	VAL = 0
--	VAR#	3:	(c____)	"PASS"	<1:0>	VAL = 1
--	VAR#	4:	(c____)	"CHECKING"	<1:0>	VAL = 2
--	;property PPG
--	VAR#	5:	(o____)	"PROPERTY" <1:0>
--	GRP#	0:	BEG = 0, LEN = 4 -----
--		0	0:	(n___) (0=>2 1=>1)	V = 0 "BOP1"	<1:0>
--		1	1:	(n___) (0=>0 1=>3)	V = 1 "BOP2"	<1:0>
--		2	2:	(____) (	0	0)	V = 2 "FAIL"	<1:0>
--		3	3:	(____) (	0	0)	V = 3 "PASS"	<1:0>
--}

-- NEW! 3 ########################
BOP1 before BOP2 {
	STAT# 4 Nods, 6 Vars, 1 Grps, 2 Inps, 1 Outs, 3 Cons

	VAR#	0:	(i____)	"BOP1"	<1:0>
	VAR#	1:	(i____)	"BOP2"	<1:0>
	;terminal node constants
	VAR#	2:	(c____)	"FAIL"	<1:0>	VAL = 0
	VAR#	3:	(c____)	"PASS"	<1:0>	VAL = 1
	VAR#	4:	(c____)	"CHECKING"	<1:0>	VAL = 2
	;property PPG
	VAR#	5:	(o____)	"PROPERTY" <1:0>
	GRP#	0:	BEG = 0, LEN = 4 -----
		0	0:	(n___) (0=>1 1=>2 2=>3)	V = 0 "BOP1"	<1:0> @[0 to event BOP2 - 1]_e
		1	1:	(____) (	0	0)	V = 2 "FAIL"	<1:0>
		2	2:	(____) (	0	0)	V = 3 "PASS"	<1:0>
		3	3:	(____) (	0	0)	V = 4 "CHECKING"	<1:0>
}


next TOP {
	STAT# 4 Nods, 5 Vars, 1 Grps, 1 Inps, 1 Outs, 3 Cons

	VAR#	0:	(i____)	"TOP"	<1:0>
	;terminal node constants
	VAR#	1:	(c____)	"FAIL"	<1:0>	VAL = 0
	VAR#	2:	(c____)	"PASS"	<1:0>	VAL = 1
	VAR#	3:	(c____)	"CHECKING"	<1:0>	VAL = 2
	;property PPG
	VAR#	4:	(o____)	"PROPERTY" <1:0>
	GRP#	0:	BEG = 0, LEN = 4 -----
		0	0:	(n___) (0=>1 1=>2 2=>3)	V = 0 "TOP"	<1:0> @1
		1	1:	(____) (	0	0)	V = 1 "FAIL"	<1:0>
		2	2:	(____) (	0	0)	V = 2 "PASS"	<1:0>
		3	3:	(____) (	0	0)	V = 3 "CHECKING"	<1:0>
}

next[k] TOP {
	STAT# 4 Nods, 5 Vars, 1 Grps, 1 Inps, 1 Outs, 3 Cons

	VAR#	0:	(i____)	"TOP"	<1:0>
	;terminal node constants
	VAR#	1:	(c____)	"FAIL"	<1:0>	VAL = 0
	VAR#	2:	(c____)	"PASS"	<1:0>	VAL = 1
	VAR#	3:	(c____)	"CHECKING"	<1:0>	VAL = 2
	;property PPG
	VAR#	4:	(o____)	"PROPERTY" <1:0>
	GRP#	0:	BEG = 0, LEN = 4 -----
		0	0:	(n___) (0=>1 1=>2 2=>3)	V = 0 "TOP"	<1:0> @k
		1	1:	(____) (	0	0)	V = 1 "FAIL"	<1:0>
		2	2:	(____) (	0	0)	V = 2 "PASS"	<1:0>
		3	3:	(____) (	0	0)	V = 3 "CHECKING"	<1:0>
}

next_e[j to k] BOP {
	STAT# 4 Nods, 5 Vars, 1 Grps, 1 Inps, 1 Outs, 3 Cons

	VAR#	0:	(i____)	"BOP"	<1:0>
	;terminal node constants
	VAR#	1:	(c____)	"FAIL"	<1:0>	VAL = 0
	VAR#	2:	(c____)	"PASS"	<1:0>	VAL = 1
	VAR#	3:	(c____)	"CHECKING"	<1:0>	VAL = 2
	;property PPG
	VAR#	4:	(o____)	"PROPERTY" <1:0>
	GRP#	0:	BEG = 0, LEN = 4 -----
		0	0:	(n___) (0=>1 1=>2 2=>3)	V = 0 "BOP"	<1:0> @[j to k]_e
		1	1:	(____) (	0	0)	V = 1 "FAIL"	<1:0>
		2	2:	(____) (	0	0)	V = 2 "PASS"	<1:0>
		3	3:	(____) (	0	0)	V = 3 "CHECKING"	<1:0>
}

next_a[j to k] TOP {
	STAT# 4 Nods, 5 Vars, 1 Grps, 1 Inps, 1 Outs, 3 Cons

	VAR#	0:	(i____)	"TOP"	<1:0>
	;terminal node constants
	VAR#	1:	(c____)	"FAIL"	<1:0>	VAL = 0
	VAR#	2:	(c____)	"PASS"	<1:0>	VAL = 1
	VAR#	3:	(c____)	"CHECKING"	<1:0>	VAL = 2
	;property PPG
	VAR#	4:	(o____)	"PROPERTY" <1:0>
	GRP#	0:	BEG = 0, LEN = 4 -----
		0	0:	(n___) (0=>1 1=>2 2=>3)	V = 0 "TOP"	<1:0>	@[j to k]_a
		1	1:	(____) (	0	0)	V = 1 "FAIL"	<1:0>
		2	2:	(____) (	0	0)	V = 2 "PASS"	<1:0>
		3	3:	(____) (	0	0)	V = 3 "CHECKING"	<1:0>
}

-- NEW!	4 ########################
next_event (BOP) [k] (TOP) {
	STAT# 4 Nods, 6 Vars, 1 Grps, 2 Inps, 1 Outs, 3 Cons

	VAR#	0:	(i____)	"TOP"	<1:0>
	VAR#	1:	(i____)	"BOP"	<1:0>
	;terminal node constants
	VAR#	2:	(c____)	"FAIL"	<1:0>	VAL = 0
	VAR#	3:	(c____)	"PASS"	<1:0>	VAL = 1
	VAR#	4:	(c____)	"CHECKING"	<1:0>	VAL = 2
	;property PPG
	VAR#	5:	(o____)	"PROPERTY" <1:0>
	GRP#	0:	BEG = 0, LEN = 4 -----
		0	0:	(n___) (0=>1 1=>2 2=>3)	V = 0 "TOP"	<1:0> @ k*event BOP
		1	1:	(____) (	0	0)	V = 2 "FAIL"	<1:0>
		2	2:	(____) (	0	0)	V = 3 "PASS"	<1:0>
		3	3:	(____) (	0	0)	V = 4 "CHECKING"	<1:0>
}


BOP or TOP {
	STAT# 5 Nods, 6 Vars, 1 Grps, 2 Inps, 1 Outs, 3 Cons

	VAR#	0:	(i____)	"BOP"	<1:0>
	VAR#	1:	(i____)	"TOP"	<1:0>
	;terminal node constants
	VAR#	2:	(c____)	"FAIL"	<1:0>	VAL = 0
	VAR#	3:	(c____)	"PASS"	<1:0>	VAL = 1
	VAR#	4:	(c____)	"CHECKING"	<1:0>	VAL = 2
	;property PPG
	VAR#	5:	(o____)	"PROPERTY" <1:0>
	GRP#	0:	BEG = 0, LEN = 5 -----
		0	0:	(n___) (0=>1 1=>3 2=>4)	V = 0 "BOP"	<1:0>
		1	1:	(n___) (0=>2 1=>3 2=>4)	V = 1 "TOP"	<1:0>
		2	2:	(____) (	0	0)	V = 2 "FAIL"	<1:0>
		3	3:	(____) (	0	0)	V = 3 "PASS"	<1:0>
		4	4:	(____) (	0	0)	V = 4 "CHECKING"	<1:0>
}

TOP1 and TOP2 {
	STAT# 5 Nods, 6 Vars, 1 Grps, 2 Inps, 1 Outs, 3 Cons

	VAR#	0:	(i____)	"TOP1"	<1:0>
	VAR#	1:	(i____)	"TOP2"	<1:0>
	;terminal node constants
	VAR#	2:	(c____)	"FAIL"	<1:0>	VAL = 0
	VAR#	3:	(c____)	"PASS"	<1:0>	VAL = 1
	VAR#	4:	(c____)	"CHECKING"	<1:0>	VAL = 2
	;property PPG
	VAR#	5:	(o____)	"PROPERTY" <1:0>
	GRP#	0:	BEG = 0, LEN = 5 -----
		0	0:	(n___) (0=>2 1=>1 2=>4)	V = 0 "TOP1"	<1:0>
		1	1:	(n___) (0=>2 1=>3 2=>4)	V = 1 "TOP2"	<1:0>
		2	2:	(____) (	0	0)	V = 2 "FAIL"	<1:0>
		3	3:	(____) (	0	0)	V = 3 "PASS"	<1:0>
		4	4:	(____) (	0	0)	V = 4 "CHECKING"	<1:0>
}

-- NEW!	5 ########################
-- So far (including current moment) inversion has been parsed as BOP
-- (using boolean VHDL ExpressionBuilder).
-- Introduction of PSL NOT operator is JUST NOW under development.
not BOP {
	STAT# 4 Nods, 5 Vars, 1 Grps, 1 Inps, 1 Outs, 3 Cons

	VAR#	0:	(i____)	"BOP"	<1:0>
	;terminal node constants
	VAR#	1:	(c____)	"FAIL"	<1:0>	VAL = 0
	VAR#	2:	(c____)	"PASS"	<1:0>	VAL = 1
	VAR#	3:	(c____)	"CHECKING"	<1:0>	VAL = 2
	;property PPG
	VAR#	4:	(o____)	"PROPERTY" <1:0>
	GRP#	0:	BEG = 0, LEN = 4 -----
		0	0:	(n___) (0=>2 1=>1 2=>3)	V = 0 "BOP"	<1:0>
		1	1:	(____) (	0	0)	V = 1 "FAIL"	<1:0>
		2	2:	(____) (	0	0)	V = 2 "PASS"	<1:0>
		3	3:	(____) (	0	0)	V = 3 "CHECKING"	<1:0>
}
